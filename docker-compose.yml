services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest # Replace with chosen image and version
    container_name: keycloak
    environment:
      # Optional environment variables (e.g., for admin access)
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"  # Map container port to host port
    volumes:
      - keycloak-data:/opt/keycloak/data  # Optional: Persist data volume
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - network-backend

  inventory-service:
    build: ./inventory-service
    container_name: inventory
    ports:
      - '8087:8087'
    restart: always
    environment:
      SERVER_PORT: 8087  # Override port from application.properties (optional)
      SPRING_APPLICATION_NAME: inventory-service  # Override name from application.properties (optional)
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/inv?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8087/actuator/health" ]
      interval: 10s
      retries: 4
    depends_on:
      - db
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - network-backend

  order-service:
    build: ./order-service
    container_name: order
    ports:
      - '8088:8088'
    restart: always
    environment:
      SERVER_PORT: 8088  # Override port from application.properties (optional)
      SPRING_APPLICATION_NAME: order-service  # Override name from application.properties (optional)
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ord?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8088/actuator/health" ]
      interval: 10s
      retries: 4
    depends_on:
      - inventory-service
      - db
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - network-backend

  ecom-app-angular:
    build: ./ecom-app-angular
    container_name: ecom-app-angular
    ports:
      - '82:80'
    expose:
      - '82'
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - network-backend

  db:
    image: mysql:latest
    container_name: db
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD:
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - network-backend


volumes:
  db-data:
  keycloak-data:

networks:
  network-backend:
